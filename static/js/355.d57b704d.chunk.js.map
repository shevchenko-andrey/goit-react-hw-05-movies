{"version":3,"file":"static/js/355.d57b704d.chunk.js","mappings":"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","sources":["components/MoviesItem/MoviesItem.styled.jsx","components/MoviesItem/MoviesItem.jsx","components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx","constants/status.js","constants/toastErrorConfig.js","moviesAPI/moviesAPI.js","components/searchMovies/searchMovies.styled.jsx","components/Buttons/SearchButton.styled.jsx","components/searchMovies/searchMovies.jsx","pages/MoviesPage/MoviesPage.styled.jsx","pages/MoviesPage/MoviesPage.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nexport const StyledMoviesItem = styled.li`\n  border: 1px solid #ddd;\n  min-width: 700px;\n  :not(:last-child) {\n    margin-bottom: 10px;\n  }\n`;\nexport const MoviesLink = styled(Link)`\n  display: block;\n  padding: 30px;\n  transition: color 0.2s linear, background-color 0.2s linear;\n  :hover {\n    background-color: #0a8672;\n    color: #ffffff;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { useLocation } from 'react-router-dom';\nimport { StyledMoviesItem, MoviesLink } from './MoviesItem.styled';\nconst MoviesItem = ({ name, id }) => {\n  const location = useLocation();\n  return (\n    <StyledMoviesItem>\n      <MoviesLink to={`/movies/${id}`} state={{ from: location }}>\n        {name}\n      </MoviesLink>\n    </StyledMoviesItem>\n  );\n};\n\nMoviesItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  id: PropTypes.number.isRequired,\n};\nexport default MoviesItem;\n","import styled from 'styled-components';\nexport const StyledMoviesList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  flex-direction: column;\n`;\n","import PropTypes from 'prop-types';\nimport MoviesItem from 'components/MoviesItem';\nimport { StyledMoviesList } from './MoviesList.styled';\nconst MoviesList = ({ movies }) => {\n  return (\n    <StyledMoviesList>\n      {movies.map(movie => {\n        const { id, original_title } = movie;\n        return <MoviesItem key={id} id={id} name={original_title} />;\n      })}\n    </StyledMoviesList>\n  );\n};\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(PropTypes.object.isRequired),\n};\nexport default MoviesList;\n","const status = {\n  IDLE: 'idle',\n  REJECTED: 'rejected',\n  RESOLVED: 'resolved',\n  PENDING: 'pending',\n};\n\nexport default status;\n","const toastErrorConfig = {\n  duration: 7000,\n  position: 'top-center',\n  style: {\n    marginTop: '59px',\n    backgroundColor: '#0b559b',\n    color: '#ffffff',\n  },\n};\nexport default toastErrorConfig;\n","import axios from 'axios';\nconst API_KEY = 'api_key=169ca8c721ab5dcac16a3ddf7ef07e2a';\nconst searchTrend = '/trending/movie/day';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const getTrendingMovies = async page => {\n  const response = await axios.get(`${searchTrend}?${API_KEY}&page=${page}`);\n  return response.data;\n};\n\nexport const getMovieDetailsById = async id => {\n  const response = await axios.get(`/movie/${id}?${API_KEY}`);\n  return response.data;\n};\n\nexport const getMovieCredits = async id => {\n  const response = await axios.get(`/movie/${id}/credits?${API_KEY}`);\n  return response.data;\n};\n\nexport const getReviews = async id => {\n  const response = await axios.get(`/movie/${id}/reviews?${API_KEY}`);\n  return response.data;\n};\nexport const getSearchMovie = async query => {\n  const response = await axios.get(`/search/movie?query=${query}&${API_KEY}`);\n  return response.data;\n};\n","import styled from 'styled-components';\nexport const SearchInput = styled.input`\n  margin-right: 10px;\n  border-radius: 5px;\n  width: 600px;\n  padding: 10px;\n  border: 3px solid #ddd;\n  transition: border-color 0.2s linear;\n  :hover,\n  :focus {\n    border-color: #032541;\n  }\n`;\nexport const SearchForm = styled.form`\n  display: flex;\n  justify-content: center;\n  margin-bottom: 40px;\n`;\n","import styled from 'styled-components';\n\nexport const SearchButton = styled.button`\n  min-width: 60px;\n  border-radius: 10px;\n  border: 3px solid #ddd;\n  padding: 10px;\n\n  transition: border-color 0.2s linear;\n  :disabled {\n    color: #807e7edf;\n  }\n  :hover {\n    border-color: #032541;\n  }\n  :hover[disabled] {\n    border-color: #ddd;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport { SearchInput, SearchForm } from './searchMovies.styled';\nimport { SearchButton } from '../Buttons/SearchButton.styled';\nconst SearchMovies = ({ onSubmit }) => {\n  const [query, setQuery] = useState('');\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit({ query: query });\n    setQuery('');\n  };\n  return (\n    <SearchForm onSubmit={handleSubmit}>\n      <SearchInput\n        value={query}\n        onChange={e => setQuery(e.target.value.trim())}\n        placeholder=\"Search movies\"\n        type=\"text\"\n      />\n\n      <SearchButton disabled={!query}>Search</SearchButton>\n    </SearchForm>\n  );\n};\nSearchMovies.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\nexport default SearchMovies;\n","import styled from 'styled-components'; \nexport const Movies = styled.main`\n  display: flex;\n  justify-content: center;\n`;\n","import { useState, useEffect } from 'react';\nimport { toast } from 'react-hot-toast';\nimport MoviesList from '../../components/MoviesList';\n\nimport { useSearchParams } from 'react-router-dom';\n\nimport { BulletList } from 'react-content-loader';\n\nimport { getSearchMovie } from '../../moviesAPI/moviesAPI';\n\nimport SearchMovies from '../../components/searchMovies';\nimport toastErrorConfig from '../../constants/toastErrorConfig';\nimport { Movies } from './MoviesPage.styled';\n\nimport status from 'constants/status';\n\nconst { IDLE, REJECTED, RESOLVED, PENDING } = status;\n\nconst MoviesPage = () => {\n  const [movies, setMovies] = useState([]);\n  const [status, setStatus] = useState(IDLE);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query');\n\n  useEffect(() => {\n    if (query) {\n      const fatchMovies = async () => {\n        setStatus(PENDING);\n        try {\n          const response = await getSearchMovie(query);\n          const { results, total_pages } = response;\n          if (total_pages < 1) {\n            throw new Error('404');\n          }\n          setMovies(results);\n          setStatus(RESOLVED);\n        } catch {\n          setStatus(REJECTED);\n          toast.error(`Not results found for \"${query}\"`, toastErrorConfig);\n        }\n      };\n\n      fatchMovies();\n    }\n  }, [query]);\n\n  return (\n    <Movies>\n      <section>\n        <SearchMovies onSubmit={setSearchParams} />\n        {status === RESOLVED && <MoviesList movies={movies} />}\n        {status === PENDING && <BulletList />}\n      </section>\n    </Movies>\n  );\n};\nexport default MoviesPage;\n"],"names":["StyledMoviesItem","styled","MoviesLink","Link","name","id","location","useLocation","to","state","from","StyledMoviesList","movies","map","movie","original_title","IDLE","REJECTED","RESOLVED","PENDING","duration","position","style","marginTop","backgroundColor","color","API_KEY","axios","getTrendingMovies","page","response","data","getMovieDetailsById","getMovieCredits","getReviews","getSearchMovie","query","SearchInput","SearchForm","SearchButton","onSubmit","useState","setQuery","e","preventDefault","value","onChange","target","trim","placeholder","type","disabled","Movies","status","setMovies","setStatus","useSearchParams","searchParams","setSearchParams","get","useEffect","fatchMovies","results","total_pages","Error","toast","toastErrorConfig","MoviesList"],"sourceRoot":""}