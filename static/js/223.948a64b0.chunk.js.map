{"version":3,"file":"static/js/223.948a64b0.chunk.js","mappings":"uNAEaA,EAAmBC,EAAAA,GAAAA,GAAH,8HAOhBC,GAAaD,EAAAA,EAAAA,IAAOE,EAAAA,GAAPF,CAAH,mM,SCQvB,EAdmB,SAAC,GAAkB,IAAhBG,EAAe,EAAfA,KAAMC,EAAS,EAATA,GACpBC,GAAWC,EAAAA,EAAAA,MACjB,OACE,SAACP,EAAD,WACE,SAACE,EAAD,CAAYM,GAAE,kBAAaH,GAAMI,MAAO,CAAEC,KAAMJ,GAAhD,SACGF,OCPIO,EAAmBV,EAAAA,GAAAA,GAAH,yFCe7B,EAbmB,SAAC,GAAgB,IAAdW,EAAa,EAAbA,OACpB,OACE,SAACD,EAAD,UACGC,EAAOC,KAAI,SAAAC,GACV,IAAQT,EAAuBS,EAAvBT,GAAIU,EAAmBD,EAAnBC,eACZ,OAAO,SAAC,EAAD,CAAqBV,GAAIA,EAAID,KAAMW,GAAlBV,U,mBCDhC,IAPe,CACbW,KAAM,OACNC,SAAU,WACVC,SAAU,WACVC,QAAS,Y,mBCKX,IATyB,CACvBC,SAAU,IACVC,SAAU,aACVC,MAAO,CACLC,UAAW,OACXC,gBAAiB,UACjBC,MAAO,a,0MCLLC,EAAU,2CAEhBC,IAAAA,SAAAA,QAAyB,+BAElB,IAAMC,EAAiB,mCAAG,WAAMC,GAAN,uFACRF,IAAAA,IAAA,UAJL,sBAIK,YAA4BD,EAA5B,iBAA4CG,IADpC,cACzBC,EADyB,yBAExBA,EAASC,MAFe,2CAAH,sDAKjBC,EAAmB,mCAAG,WAAM3B,GAAN,uFACVsB,IAAAA,IAAA,iBAAoBtB,EAApB,YAA0BqB,IADhB,cAC3BI,EAD2B,yBAE1BA,EAASC,MAFiB,2CAAH,sDAKnBE,EAAe,mCAAG,WAAM5B,GAAN,uFACNsB,IAAAA,IAAA,iBAAoBtB,EAApB,oBAAkCqB,IAD5B,cACvBI,EADuB,yBAEtBA,EAASC,MAFa,2CAAH,sDAKfG,EAAU,mCAAG,WAAM7B,GAAN,uFACDsB,IAAAA,IAAA,iBAAoBtB,EAApB,oBAAkCqB,IADjC,cAClBI,EADkB,yBAEjBA,EAASC,MAFQ,2CAAH,sDAIVI,EAAc,mCAAG,WAAMC,GAAN,uFACLT,IAAAA,IAAA,8BAAiCS,EAAjC,YAA0CV,IADrC,cACtBI,EADsB,yBAErBA,EAASC,MAFY,2CAAH,uD,2KCvBdM,EAAOpC,EAAAA,GAAAA,KAAH,sEAIJqC,EAAYrC,EAAAA,GAAAA,GAAH,gD,uCCGde,EAAsCuB,EAAAA,EAAAA,KAAhCtB,EAAgCsB,EAAAA,EAAAA,SAAtBrB,EAAsBqB,EAAAA,EAAAA,SAAZpB,EAAYoB,EAAAA,EAAAA,QAoC9C,EAlCkB,WAChB,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAO5B,EAAP,KAAe6B,EAAf,KACA,GAA4BD,EAAAA,EAAAA,UAASxB,GAArC,eAAOuB,EAAP,KAAeG,EAAf,KAoBA,OAnBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAW,mCAAG,6FAClBF,EAAUvB,GADQ,mBAGOS,EAAAA,EAAAA,IAAkB,GAHzB,OAGVE,EAHU,OAIRe,EAAYf,EAAZe,QACRJ,EAAUI,GACVH,EAAUxB,GANM,kDAQhBwB,EAAUzB,GACV6B,EAAAA,GAAAA,MACE,6CACAC,EAAAA,GAXc,0DAAH,qDAejBH,MACC,KAGD,SAACP,EAAD,WACE,gCACE,SAACC,EAAD,6BACCC,IAAWpB,IAAW,SAAC,KAAD,CAAY6B,MAAM,UACxCT,IAAWrB,IAAY,SAAC+B,EAAA,EAAD,CAAYrC,OAAQA,IAC3C2B,IAAWtB,IAAY","sources":["components/MoviesItem/MoviesItem.styled.jsx","components/MoviesItem/MoviesItem.jsx","components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx","constants/status.js","constants/toastErrorConfig.js","moviesAPI/moviesAPI.js","pages/HomePage/HomePage.styled.jsx","pages/HomePage/HomePage.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nexport const StyledMoviesItem = styled.li`\n  border: 1px solid #ddd;\n  min-width: 700px;\n  :not(:last-child) {\n    margin-bottom: 10px;\n  }\n`;\nexport const MoviesLink = styled(Link)`\n  display: block;\n  padding: 30px;\n  transition: color 0.2s linear, background-color 0.2s linear;\n  :hover {\n    background-color: #0a8672;\n    color: #ffffff;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { useLocation } from 'react-router-dom';\nimport { StyledMoviesItem, MoviesLink } from './MoviesItem.styled';\nconst MoviesItem = ({ name, id }) => {\n  const location = useLocation();\n  return (\n    <StyledMoviesItem>\n      <MoviesLink to={`/movies/${id}`} state={{ from: location }}>\n        {name}\n      </MoviesLink>\n    </StyledMoviesItem>\n  );\n};\nMoviesItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  id: PropTypes.number.isRequired,\n};\nexport default MoviesItem;\n","import styled from 'styled-components';\nexport const StyledMoviesList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  flex-direction: column;\n`;\n","import PropTypes from 'prop-types';\nimport MoviesItem from 'components/MoviesItem';\nimport { StyledMoviesList } from './MoviesList.styled';\nconst MoviesList = ({ movies }) => {\n  return (\n    <StyledMoviesList>\n      {movies.map(movie => {\n        const { id, original_title } = movie;\n        return <MoviesItem key={id} id={id} name={original_title} />;\n      })}\n    </StyledMoviesList>\n  );\n};\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(PropTypes.object.isRequired),\n};\nexport default MoviesList;\n","const status = {\n  IDLE: 'idle',\n  REJECTED: 'rejected',\n  RESOLVED: 'resolved',\n  PENDING: 'pending',\n};\n\nexport default status;\n","const toastErrorConfig = {\n  duration: 7000,\n  position: 'top-center',\n  style: {\n    marginTop: '59px',\n    backgroundColor: '#0b559b',\n    color: '#ffffff',\n  },\n};\nexport default toastErrorConfig;\n","import axios from 'axios';\nconst API_KEY = 'api_key=169ca8c721ab5dcac16a3ddf7ef07e2a';\nconst searchTrend = '/trending/movie/day';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const getTrendingMovies = async page => {\n  const response = await axios.get(`${searchTrend}?${API_KEY}&page=${page}`);\n  return response.data;\n};\n\nexport const getMovieDetailsById = async id => {\n  const response = await axios.get(`/movie/${id}?${API_KEY}`);\n  return response.data;\n};\n\nexport const getMovieCredits = async id => {\n  const response = await axios.get(`/movie/${id}/credits?${API_KEY}`);\n  return response.data;\n};\n\nexport const getReviews = async id => {\n  const response = await axios.get(`/movie/${id}/reviews?${API_KEY}`);\n  return response.data;\n};\nexport const getSearchMovie = async query => {\n  const response = await axios.get(`/search/movie?query=${query}&${API_KEY}`);\n  return response.data;\n};\n","import styled from 'styled-components';\nexport const Home = styled.main`\n  display: flex;\n  justify-content: center;\n`;\nexport const HomeTitle = styled.h1`\n  margin-bottom: 10px;\n`;\n","import { useState, useEffect } from 'react';\nimport { toast } from 'react-hot-toast';\nimport { BulletList } from 'react-content-loader';\nimport MoviesList from 'components/MoviesList';\nimport { Home, HomeTitle } from './HomePage.styled';\nimport status from 'constants/status';\nimport { getTrendingMovies } from '../../moviesAPI/moviesAPI';\nimport toastErrorConfig from '../../constants/toastErrorConfig';\nconst { IDLE, REJECTED, RESOLVED, PENDING } = status;\n\nconst HomePages = () => {\n  const [movies, setMovies] = useState([]);\n  const [status, setStatus] = useState(IDLE);\n  useEffect(() => {\n    const fatchMovies = async () => {\n      setStatus(PENDING);\n      try {\n        const response = await getTrendingMovies(1);\n        const { results } = response;\n        setMovies(results);\n        setStatus(RESOLVED);\n      } catch {\n        setStatus(REJECTED);\n        toast.error(\n          'Please check your connection and try again',\n          toastErrorConfig\n        );\n      }\n    };\n    fatchMovies();\n  }, []);\n\n  return (\n    <Home>\n      <section>\n        <HomeTitle>Trending today</HomeTitle>\n        {status === PENDING && <BulletList width=\"750px\" />}\n        {status === RESOLVED && <MoviesList movies={movies} />}\n        {status === REJECTED && <main></main>}\n      </section>\n    </Home>\n  );\n};\n\nexport default HomePages;\n"],"names":["StyledMoviesItem","styled","MoviesLink","Link","name","id","location","useLocation","to","state","from","StyledMoviesList","movies","map","movie","original_title","IDLE","REJECTED","RESOLVED","PENDING","duration","position","style","marginTop","backgroundColor","color","API_KEY","axios","getTrendingMovies","page","response","data","getMovieDetailsById","getMovieCredits","getReviews","getSearchMovie","query","Home","HomeTitle","status","useState","setMovies","setStatus","useEffect","fatchMovies","results","toast","toastErrorConfig","width","MoviesList"],"sourceRoot":""}