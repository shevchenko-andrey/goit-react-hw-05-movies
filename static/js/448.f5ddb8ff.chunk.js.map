{"version":3,"file":"static/js/448.f5ddb8ff.chunk.js","mappings":"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","sources":["components/Cast/Cast.styled.jsx","components/ActorsItem/ActorsItemStyled.jsx","components/ActorsItem/ActorsItem.jsx","components/Loaders/ImageGrid.jsx","components/Cast/Cast.jsx","constants/status.js","moviesAPI/moviesAPI.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js"],"sourcesContent":["import styled from 'styled-components';\nexport const AuthorList = styled.ul`\n  display: grid;\n  margin-top: 30px;\n  width: 750px;\n  grid-template-columns: repeat(4, 1fr);\n  grid-gap: 1em;\n`;\n","import styled from 'styled-components';\nexport const ProfileImgWrapper = styled.div`\n  justify-self: center;\n`;\nexport const StyledActhorItem = styled.li`\n  display: grid;\n  grid-auto-rows: minmax(100, 150px);\n  text-align: center;\n  justify-self: center;\n`;\nexport const ActorName = styled.p`\n  margin-top: 10px;\n`;\n","import PropTypes from 'prop-types';\nimport defaultImg from '../../images/profileSkelets.jpeg';\n\nimport {\n  ProfileImgWrapper,\n  StyledActhorItem,\n  ActorName,\n} from './ActorsItemStyled';\nconst ActorsItem = ({ imgUrl, profile_path, name, id }) => {\n  return (\n    <StyledActhorItem>\n      <ProfileImgWrapper>\n        {profile_path ? (\n          <img src={imgUrl} id={id} alt={`profile ${name}`} />\n        ) : (\n          <img\n            src={defaultImg}\n            width=\"92px\"\n            height=\"138px\"\n            id={id}\n            alt={`profile ${name}`}\n          />\n        )}\n      </ProfileImgWrapper>\n      <ActorName>{name}</ActorName>\n    </StyledActhorItem>\n  );\n};\nActorsItem.propTypes = {\n  imgUrl: PropTypes.string.isRequired,\n  profile_path: PropTypes.string,\n  name: PropTypes.string.isRequired,\n  id: PropTypes.number.isRequired,\n};\n\nexport default ActorsItem;\n","import React from 'react';\nimport ContentLoader from 'react-content-loader';\n\nconst ImageGrid = props => (\n  <ContentLoader\n    width={800}\n    height={575}\n    viewBox=\"0 0 800 575\"\n    backgroundColor=\"#f3f3f3\"\n    foregroundColor=\"#ecebeb\"\n    {...props}\n  >\n    <rect x=\"537\" y=\"9\" rx=\"2\" ry=\"2\" width=\"140\" height=\"10\" />\n    <rect x=\"14\" y=\"30\" rx=\"2\" ry=\"2\" width=\"667\" height=\"11\" />\n    <rect x=\"12\" y=\"58\" rx=\"2\" ry=\"2\" width=\"211\" height=\"211\" />\n    <rect x=\"240\" y=\"57\" rx=\"2\" ry=\"2\" width=\"211\" height=\"211\" />\n    <rect x=\"467\" y=\"56\" rx=\"2\" ry=\"2\" width=\"211\" height=\"211\" />\n    <rect x=\"12\" y=\"283\" rx=\"2\" ry=\"2\" width=\"211\" height=\"211\" />\n    <rect x=\"240\" y=\"281\" rx=\"2\" ry=\"2\" width=\"211\" height=\"211\" />\n    <rect x=\"468\" y=\"279\" rx=\"2\" ry=\"2\" width=\"211\" height=\"211\" />\n    <circle cx=\"286\" cy=\"536\" r=\"12\" />\n    <circle cx=\"319\" cy=\"535\" r=\"12\" />\n    <circle cx=\"353\" cy=\"535\" r=\"12\" />\n    <rect x=\"378\" y=\"524\" rx=\"0\" ry=\"0\" width=\"52\" height=\"24\" />\n    <rect x=\"210\" y=\"523\" rx=\"0\" ry=\"0\" width=\"52\" height=\"24\" />\n    <circle cx=\"210\" cy=\"535\" r=\"12\" />\n    <circle cx=\"428\" cy=\"536\" r=\"12\" />\n  </ContentLoader>\n);\n\nImageGrid.metadata = {\n  name: 'Hassan Tijani.A',\n  github: 'surepeps',\n  description: 'Image Grid with Pagination',\n  filename: 'ImageGrid',\n};\n\nexport default ImageGrid;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieCredits } from 'moviesAPI/moviesAPI';\nimport { AuthorList } from './Cast.styled';\nimport ActorsItem from 'components/ActorsItem';\nimport status from 'constants/status';\nimport ImageGrid from '../Loaders/ImageGrid';\nconst { IDLE, REJECTED, RESOLVED, PENDING } = status;\n\nconst Cast = () => {\n  const [cast, setCast] = useState(null);\n  const [status, setStatus] = useState(IDLE);\n  const { moviesId } = useParams();\n  useEffect(() => {\n    const fatchCast = async () => {\n      setStatus(PENDING);\n      try {\n        const response = await getMovieCredits(moviesId);\n        setCast(response.cast);\n        setStatus(RESOLVED);\n      } catch {\n        setStatus(REJECTED);\n      }\n    };\n    fatchCast();\n  }, [moviesId]);\n\n  if (status === RESOLVED) {\n    return (\n      <AuthorList>\n        {cast.map(({ profile_path, id, original_name }) => (\n          <ActorsItem\n            key={id}\n            imgUrl={`http://image.tmdb.org/t/p/w92/${profile_path}`}\n            profile_path={profile_path}\n            name={original_name}\n            id={id}\n          />\n        ))}\n      </AuthorList>\n    );\n  }\n  if (status === PENDING) {\n    return <ImageGrid width=\"400px\" />;\n  }\n\n  return <ul></ul>;\n};\nexport default Cast;\n","const status = {\n  IDLE: 'idle',\n  REJECTED: 'rejected',\n  RESOLVED: 'resolved',\n  PENDING: 'pending',\n};\n\nexport default status;\n","import axios from 'axios';\nconst API_KEY = 'api_key=169ca8c721ab5dcac16a3ddf7ef07e2a';\nconst searchTrend = '/trending/movie/day';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const getTrendingMovies = async page => {\n  const response = await axios.get(`${searchTrend}?${API_KEY}&page=${page}`);\n  return response.data;\n};\n\nexport const getMovieDetailsById = async id => {\n  const response = await axios.get(`/movie/${id}?${API_KEY}`);\n  return response.data;\n};\n\nexport const getMovieCredits = async id => {\n  const response = await axios.get(`/movie/${id}/credits?${API_KEY}`);\n  return response.data;\n};\n\nexport const getReviews = async id => {\n  const response = await axios.get(`/movie/${id}/reviews?${API_KEY}`);\n  return response.data;\n};\nexport const getSearchMovie = async query => {\n  const response = await axios.get(`/search/movie?query=${query}&${API_KEY}`);\n  return response.data;\n};\n","import defineProperty from \"./defineProperty.js\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}"],"names":["AuthorList","styled","ProfileImgWrapper","StyledActhorItem","ActorName","imgUrl","profile_path","name","id","src","alt","defaultImg","width","height","ImageGrid","props","viewBox","backgroundColor","foregroundColor","x","y","rx","ry","cx","cy","r","metadata","github","description","filename","IDLE","status","REJECTED","RESOLVED","PENDING","useState","cast","setCast","setStatus","moviesId","useParams","useEffect","fatchCast","getMovieCredits","response","map","original_name","API_KEY","axios","getTrendingMovies","page","data","getMovieDetailsById","getReviews","getSearchMovie","query","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty"],"sourceRoot":""}